#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    float3 xformOp:translate = (0.0016005039, 0.83419204, 1.4422705)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def "Sun" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Sun.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.83957624, 1.2606003, -2.2606704)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.19999999)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (3.7252903e-8, 0, 4.8428774e-8)
                }
            }
        }
    }

    def "Mercury" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Mercury.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-0.6395764, 1.2626698, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Venus" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Venus.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.2, 0.2, 0.2)
        float3 xformOp:translate = (-0.53957635, 1.2626693, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Earth" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Earth.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.25, 0.25, 0.25)
        float3 xformOp:translate = (-0.4395764, 1.2626693, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Mars" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Mars.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.22, 0.22, 0.22)
        float3 xformOp:translate = (-0.3395764, 1.2626693, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Jupiter" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Jupiter.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.1395764, 1.2626693, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Saturn" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Saturn.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.6, 0.6, 0.6)
        float3 xformOp:translate = (0.1604236, 1.2626693, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Uranus" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Uranus.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.4, 0.4, 0.4)
        float3 xformOp:translate = (0.4604236, 1.2626693, -2.2573717)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Neptune" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @Neptune.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.4, 0.4, 0.4)
        float3 xformOp:translate = (0.66045666, 1.2511921, -2.2598357)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

